{"ast":null,"code":"var _jsxFileName = \"D:\\\\ALL projects\\\\Skillazon\\\\skillazon\\\\src\\\\components\\\\RealTimeChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport { v4 as uuidv4 } from 'uuid';\nimport './RealTimeChat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RealTimeChat = () => {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [username, setUsername] = useState('');\n  const [isUsernameSet, setIsUsernameSet] = useState(false);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [isTyping, setIsTyping] = useState(false);\n  const [typingUsers, setTypingUsers] = useState([]);\n  const [isConnected, setIsConnected] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState('Disconnected');\n  const messagesEndRef = useRef(null);\n  const typingTimeoutRef = useRef(null);\n\n  // For development/demo purposes - you can change this to your actual server URL\n  const SOCKET_SERVER_URL = 'http://localhost:3001';\n  useEffect(() => {\n    // Initialize socket connection\n    const newSocket = io(SOCKET_SERVER_URL, {\n      autoConnect: false,\n      transports: ['websocket', 'polling']\n    });\n\n    // Connection event listeners\n    newSocket.on('connect', () => {\n      setIsConnected(true);\n      setConnectionStatus('Connected');\n      console.log('Connected to server');\n    });\n    newSocket.on('disconnect', () => {\n      setIsConnected(false);\n      setConnectionStatus('Disconnected');\n      console.log('Disconnected from server');\n    });\n    newSocket.on('connect_error', error => {\n      setIsConnected(false);\n      setConnectionStatus('Connection Error');\n      console.error('Connection error:', error);\n    });\n\n    // Chat event listeners\n    newSocket.on('message', data => {\n      const newMessage = {\n        id: data.id || uuidv4(),\n        username: data.username,\n        message: data.message,\n        timestamp: new Date(data.timestamp).toLocaleTimeString(),\n        isSystem: data.isSystem || false\n      };\n      setMessages(prev => [...prev, newMessage]);\n    });\n    newSocket.on('user_joined', data => {\n      setOnlineUsers(data.users);\n      const systemMessage = {\n        id: uuidv4(),\n        username: 'System',\n        message: `${data.username} joined the chat`,\n        timestamp: new Date().toLocaleTimeString(),\n        isSystem: true\n      };\n      setMessages(prev => [...prev, systemMessage]);\n    });\n    newSocket.on('user_left', data => {\n      setOnlineUsers(data.users);\n      const systemMessage = {\n        id: uuidv4(),\n        username: 'System',\n        message: `${data.username} left the chat`,\n        timestamp: new Date().toLocaleTimeString(),\n        isSystem: true\n      };\n      setMessages(prev => [...prev, systemMessage]);\n    });\n    newSocket.on('users_update', users => {\n      setOnlineUsers(users);\n    });\n    newSocket.on('typing', data => {\n      if (data.username !== username) {\n        if (data.isTyping) {\n          setTypingUsers(prev => [...prev.filter(user => user !== data.username), data.username]);\n        } else {\n          setTypingUsers(prev => prev.filter(user => user !== data.username));\n        }\n      }\n    });\n    newSocket.on('message_history', history => {\n      setMessages(history.map(msg => ({\n        ...msg,\n        timestamp: new Date(msg.timestamp).toLocaleTimeString()\n      })));\n    });\n    setSocket(newSocket);\n    return () => {\n      newSocket.disconnect();\n    };\n  }, [username]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const handleUsernameSubmit = e => {\n    e.preventDefault();\n    if (username.trim() && socket) {\n      setIsUsernameSet(true);\n      socket.connect();\n      socket.emit('join_room', {\n        username: username.trim()\n      });\n    }\n  };\n  const handleMessageSubmit = e => {\n    e.preventDefault();\n    if (inputMessage.trim() && socket && isConnected) {\n      const messageData = {\n        id: uuidv4(),\n        username,\n        message: inputMessage.trim(),\n        timestamp: new Date().toISOString()\n      };\n      socket.emit('send_message', messageData);\n      setInputMessage('');\n\n      // Stop typing indicator\n      if (isTyping) {\n        setIsTyping(false);\n        socket.emit('typing', {\n          username,\n          isTyping: false\n        });\n      }\n    }\n  };\n  const handleInputChange = e => {\n    setInputMessage(e.target.value);\n    if (socket && isConnected) {\n      if (!isTyping) {\n        setIsTyping(true);\n        socket.emit('typing', {\n          username,\n          isTyping: true\n        });\n      }\n\n      // Clear existing timeout\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n\n      // Set new timeout\n      typingTimeoutRef.current = setTimeout(() => {\n        setIsTyping(false);\n        socket.emit('typing', {\n          username,\n          isTyping: false\n        });\n      }, 1000);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleMessageSubmit(e);\n    }\n  };\n  const handleReconnect = () => {\n    if (socket) {\n      socket.connect();\n    }\n  };\n  if (!isUsernameSet) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"realtime-chat-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"username-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Skillazon Real-Time Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Connect with others in real-time!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleUsernameSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter your username\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            maxLength: 20,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Join Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"realtime-chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Skillazon Real-Time Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `connection-status ${isConnected ? 'connected' : 'disconnected'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-indicator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), connectionStatus, !isConnected && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"reconnect-btn\",\n            onClick: handleReconnect,\n            children: \"Reconnect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"online-users\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Online: \", onlineUsers.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"users-list\",\n          children: onlineUsers.map((user, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `user-badge ${user === username ? 'own-user' : ''}`,\n            children: user\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-chat\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No messages yet. Start the conversation!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this) : messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.isSystem ? 'system-message' : ''} ${msg.username === username ? 'own-message' : ''}`,\n        children: [!msg.isSystem && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"username\",\n            children: msg.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timestamp\",\n            children: msg.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: msg.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 15\n        }, this)]\n      }, msg.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 13\n      }, this)), typingUsers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing-dots\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"typing-text\",\n          children: [typingUsers.join(', '), \" \", typingUsers.length === 1 ? 'is' : 'are', \" typing...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"message-form\",\n      onSubmit: handleMessageSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: isConnected ? \"Type your message...\" : \"Connecting...\",\n        value: inputMessage,\n        onChange: handleInputChange,\n        onKeyPress: handleKeyPress,\n        maxLength: 500,\n        disabled: !isConnected,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !inputMessage.trim() || !isConnected,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n};\n_s(RealTimeChat, \"ec8Ot+M5mI6x6n+jV7D0J0DSnMc=\");\n_c = RealTimeChat;\nexport default RealTimeChat;\nvar _c;\n$RefreshReg$(_c, \"RealTimeChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","v4","uuidv4","jsxDEV","_jsxDEV","RealTimeChat","_s","socket","setSocket","messages","setMessages","inputMessage","setInputMessage","username","setUsername","isUsernameSet","setIsUsernameSet","onlineUsers","setOnlineUsers","isTyping","setIsTyping","typingUsers","setTypingUsers","isConnected","setIsConnected","connectionStatus","setConnectionStatus","messagesEndRef","typingTimeoutRef","SOCKET_SERVER_URL","newSocket","autoConnect","transports","on","console","log","error","data","newMessage","id","message","timestamp","Date","toLocaleTimeString","isSystem","prev","users","systemMessage","filter","user","history","map","msg","disconnect","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleUsernameSubmit","e","preventDefault","trim","connect","emit","handleMessageSubmit","messageData","toISOString","handleInputChange","target","value","clearTimeout","setTimeout","handleKeyPress","key","shiftKey","handleReconnect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","maxLength","required","onClick","length","index","join","ref","onKeyPress","disabled","_c","$RefreshReg$"],"sources":["D:/ALL projects/Skillazon/skillazon/src/components/RealTimeChat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './RealTimeChat.css';\r\n\r\nconst RealTimeChat = () => {\r\n  const [socket, setSocket] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [isUsernameSet, setIsUsernameSet] = useState(false);\r\n  const [onlineUsers, setOnlineUsers] = useState([]);\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const [typingUsers, setTypingUsers] = useState([]);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [connectionStatus, setConnectionStatus] = useState('Disconnected');\r\n  const messagesEndRef = useRef(null);\r\n  const typingTimeoutRef = useRef(null);\r\n\r\n  // For development/demo purposes - you can change this to your actual server URL\r\n  const SOCKET_SERVER_URL = 'http://localhost:3001';\r\n\r\n  useEffect(() => {\r\n    // Initialize socket connection\r\n    const newSocket = io(SOCKET_SERVER_URL, {\r\n      autoConnect: false,\r\n      transports: ['websocket', 'polling']\r\n    });\r\n\r\n    // Connection event listeners\r\n    newSocket.on('connect', () => {\r\n      setIsConnected(true);\r\n      setConnectionStatus('Connected');\r\n      console.log('Connected to server');\r\n    });\r\n\r\n    newSocket.on('disconnect', () => {\r\n      setIsConnected(false);\r\n      setConnectionStatus('Disconnected');\r\n      console.log('Disconnected from server');\r\n    });\r\n\r\n    newSocket.on('connect_error', (error) => {\r\n      setIsConnected(false);\r\n      setConnectionStatus('Connection Error');\r\n      console.error('Connection error:', error);\r\n    });\r\n\r\n    // Chat event listeners\r\n    newSocket.on('message', (data) => {\r\n      const newMessage = {\r\n        id: data.id || uuidv4(),\r\n        username: data.username,\r\n        message: data.message,\r\n        timestamp: new Date(data.timestamp).toLocaleTimeString(),\r\n        isSystem: data.isSystem || false\r\n      };\r\n      setMessages(prev => [...prev, newMessage]);\r\n    });\r\n\r\n    newSocket.on('user_joined', (data) => {\r\n      setOnlineUsers(data.users);\r\n      const systemMessage = {\r\n        id: uuidv4(),\r\n        username: 'System',\r\n        message: `${data.username} joined the chat`,\r\n        timestamp: new Date().toLocaleTimeString(),\r\n        isSystem: true\r\n      };\r\n      setMessages(prev => [...prev, systemMessage]);\r\n    });\r\n\r\n    newSocket.on('user_left', (data) => {\r\n      setOnlineUsers(data.users);\r\n      const systemMessage = {\r\n        id: uuidv4(),\r\n        username: 'System',\r\n        message: `${data.username} left the chat`,\r\n        timestamp: new Date().toLocaleTimeString(),\r\n        isSystem: true\r\n      };\r\n      setMessages(prev => [...prev, systemMessage]);\r\n    });\r\n\r\n    newSocket.on('users_update', (users) => {\r\n      setOnlineUsers(users);\r\n    });\r\n\r\n    newSocket.on('typing', (data) => {\r\n      if (data.username !== username) {\r\n        if (data.isTyping) {\r\n          setTypingUsers(prev => [...prev.filter(user => user !== data.username), data.username]);\r\n        } else {\r\n          setTypingUsers(prev => prev.filter(user => user !== data.username));\r\n        }\r\n      }\r\n    });\r\n\r\n    newSocket.on('message_history', (history) => {\r\n      setMessages(history.map(msg => ({\r\n        ...msg,\r\n        timestamp: new Date(msg.timestamp).toLocaleTimeString()\r\n      })));\r\n    });\r\n\r\n    setSocket(newSocket);\r\n\r\n    return () => {\r\n      newSocket.disconnect();\r\n    };\r\n  }, [username]);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  const handleUsernameSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (username.trim() && socket) {\r\n      setIsUsernameSet(true);\r\n      socket.connect();\r\n      socket.emit('join_room', { username: username.trim() });\r\n    }\r\n  };\r\n\r\n  const handleMessageSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputMessage.trim() && socket && isConnected) {\r\n      const messageData = {\r\n        id: uuidv4(),\r\n        username,\r\n        message: inputMessage.trim(),\r\n        timestamp: new Date().toISOString()\r\n      };\r\n      \r\n      socket.emit('send_message', messageData);\r\n      setInputMessage('');\r\n      \r\n      // Stop typing indicator\r\n      if (isTyping) {\r\n        setIsTyping(false);\r\n        socket.emit('typing', { username, isTyping: false });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputMessage(e.target.value);\r\n    \r\n    if (socket && isConnected) {\r\n      if (!isTyping) {\r\n        setIsTyping(true);\r\n        socket.emit('typing', { username, isTyping: true });\r\n      }\r\n      \r\n      // Clear existing timeout\r\n      if (typingTimeoutRef.current) {\r\n        clearTimeout(typingTimeoutRef.current);\r\n      }\r\n      \r\n      // Set new timeout\r\n      typingTimeoutRef.current = setTimeout(() => {\r\n        setIsTyping(false);\r\n        socket.emit('typing', { username, isTyping: false });\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleMessageSubmit(e);\r\n    }\r\n  };\r\n\r\n  const handleReconnect = () => {\r\n    if (socket) {\r\n      socket.connect();\r\n    }\r\n  };\r\n\r\n  if (!isUsernameSet) {\r\n    return (\r\n      <div className=\"realtime-chat-container\">\r\n        <div className=\"username-form\">\r\n          <h2>Skillazon Real-Time Chat</h2>\r\n          <p>Connect with others in real-time!</p>\r\n          <form onSubmit={handleUsernameSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter your username\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              maxLength={20}\r\n              required\r\n            />\r\n            <button type=\"submit\">Join Chat</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"realtime-chat-container\">\r\n      <div className=\"chat-header\">\r\n        <div className=\"header-left\">\r\n          <h2>Skillazon Real-Time Chat</h2>\r\n          <div className={`connection-status ${isConnected ? 'connected' : 'disconnected'}`}>\r\n            <span className=\"status-indicator\"></span>\r\n            {connectionStatus}\r\n            {!isConnected && (\r\n              <button className=\"reconnect-btn\" onClick={handleReconnect}>\r\n                Reconnect\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"online-users\">\r\n          <span>Online: {onlineUsers.length}</span>\r\n          <div className=\"users-list\">\r\n            {onlineUsers.map((user, index) => (\r\n              <span key={index} className={`user-badge ${user === username ? 'own-user' : ''}`}>\r\n                {user}\r\n              </span>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chat-messages\">\r\n        {messages.length === 0 ? (\r\n          <div className=\"empty-chat\">\r\n            <p>No messages yet. Start the conversation!</p>\r\n          </div>\r\n        ) : (\r\n          messages.map((msg) => (\r\n            <div\r\n              key={msg.id}\r\n              className={`message ${msg.isSystem ? 'system-message' : ''} ${\r\n                msg.username === username ? 'own-message' : ''\r\n              }`}\r\n            >\r\n              {!msg.isSystem && (\r\n                <div className=\"message-header\">\r\n                  <span className=\"username\">{msg.username}</span>\r\n                  <span className=\"timestamp\">{msg.timestamp}</span>\r\n                </div>\r\n              )}\r\n              <div className=\"message-content\">{msg.message}</div>\r\n            </div>\r\n          ))\r\n        )}\r\n        \r\n        {typingUsers.length > 0 && (\r\n          <div className=\"typing-indicator\">\r\n            <div className=\"typing-dots\">\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n            </div>\r\n            <span className=\"typing-text\">\r\n              {typingUsers.join(', ')} {typingUsers.length === 1 ? 'is' : 'are'} typing...\r\n            </span>\r\n          </div>\r\n        )}\r\n        \r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      <form className=\"message-form\" onSubmit={handleMessageSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder={isConnected ? \"Type your message...\" : \"Connecting...\"}\r\n          value={inputMessage}\r\n          onChange={handleInputChange}\r\n          onKeyPress={handleKeyPress}\r\n          maxLength={500}\r\n          disabled={!isConnected}\r\n          required\r\n        />\r\n        <button type=\"submit\" disabled={!inputMessage.trim() || !isConnected}>\r\n          Send\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RealTimeChat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}